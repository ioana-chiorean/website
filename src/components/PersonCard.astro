---
import type { Person } from "../data/types";
import Modal from "../components/Modal.astro";
import type { MarkdownInstance } from "astro";
import { Picture } from "astro-imagetools/components";
export interface Props {
  personMarkdown: MarkdownInstance<Person>;
  variant?: "large" | "small";
}

const { personMarkdown, variant = "large" } = Astro.props as Props;

const { frontmatter: person, file } = personMarkdown;
const id = file.split("/").pop() || "";
---

<div class="card" data-size={variant}>
  <button
    aria-haspopup="dialog"
    aria-controls={id}
    class="clickable-photo"
    onclick={`window['${id}'].showModal()`}
  >
    <!-- <img src={`/img/${person.imgName}`} alt={person.name} /> -->
    <Picture
      src={`/img/${person.imgName}`}
      alt={person.name}
      sizes="(max-width: 1200px) 15rem, 11rem"
      preload="webp"
      includeSourceFormat={false}
      fallbackFormat="png"
    />
  </button>
  <div class="details">
    <strong>
      {person.name}
    </strong>
    {
      variant === "large" && (
        <>
          <span>{person.title}</span>
          {person.company && <span>{person.company}</span>}
        </>
      )
    }
  </div>

  <Modal id={id} personMarkdown={personMarkdown} />
</div>
<style>
  .card {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    width: 15rem;
    font-family: var(--font-family-display);
  }

  .card[data-size="small"] {
    width: 11rem;
  }

  .card[data-size="small"] .clickable-photo:hover {
    border-width: 0.7rem;
  }

  .details {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .clickable-photo {
    padding: 0;
    display: block;
    width: 100%;
    overflow: hidden;
    border-radius: 999px;
    border: 0rem solid var(--person-accent-color);
    transition: outline-offset var(--speed-fade) ease-out,
      filter var(--speed-fade) ease-out, border-width var(--speed-fade) ease-out;
    filter: grayscale(1);
  }

  .clickable-photo img {
    display: block;
    width: 100%;
  }

  .clickable-photo:hover {
    border-width: 1rem;
    filter: grayscale(0);
  }

  .clickable-photo:focus-visible {
    outline: dashed var(--color-accent-pink) 5px;
    outline-offset: 8px;
    filter: grayscale(0);
  }
</style>
